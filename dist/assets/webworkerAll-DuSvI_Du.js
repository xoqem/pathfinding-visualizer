import{E as y,U as Tt,T as Te,a as vt,a3 as H,a4 as O,D as j,v as F,a0 as U,M as k,ac as St,ad as wt,w as V,W as de,ae as Ct,af as $,ag as G,m as Y,d as He,K as z,P as Bt,a6 as ue,R as fe,J as Le,c as X,B as W,ah as Pt,S as Z,H as w,ai as Rt,aj as pe,O as le,ak as N,u as ge,y as Mt,G as Ft,al as Ut,o as De,s as Oe,a7 as Ie,aa as Ee,t as kt,p as At,q as Gt,a8 as zt,a9 as Wt,ab as Ht,am as Lt,an as Dt,n as ve,e as P,ao as Ot}from"./index-CbmVtjQi.js";import{c as re,a as It,b as Et,B as Ve}from"./colorToUniform-KTpA7KSL.js";import{C as E}from"./CanvasPool-COK7NNiJ.js";class $e{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:i,clientHeight:s}=this._resizeTo;t=i,r=s}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}$e.extension=y.Application;class Ye{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,Tt.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?Te.shared:new Te,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}Ye.extension=y.Application;class Vt extends vt{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.applyFillAsTint=!0,this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return H(O,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return H(O,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return H(O,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return H(O,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return H(O,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(e=!1){var t;this.emit("destroy",this),this.removeAllListeners();for(const r in this.chars)(t=this.chars[r].texture)==null||t.destroy();this.chars=null,e&&(this.pages.forEach(r=>r.texture.destroy(!0)),this.pages=null)}}const $t=["serif","sans-serif","monospace","cursive","fantasy","system-ui"];function ee(a){const e=typeof a.fontSize=="number"?`${a.fontSize}px`:a.fontSize;let t=a.fontFamily;Array.isArray(a.fontFamily)||(t=a.fontFamily.split(","));for(let r=t.length-1;r>=0;r--){let i=t[r].trim();!/([\"\'])[^\'\"]+\1/.test(i)&&!$t.includes(i)&&(i=`"${i}"`),t[r]=i}return`${a.fontStyle} ${a.fontVariant} ${a.fontWeight} ${e} ${t.join(",")}`}const se={willReadFrequently:!0},A=class m{static get experimentalLetterSpacingSupported(){let e=m._experimentalLetterSpacingSupported;if(e!==void 0){const t=j.get().getCanvasRenderingContext2D().prototype;e=m._experimentalLetterSpacingSupported="letterSpacing"in t||"textLetterSpacing"in t}return e}constructor(e,t,r,i,s,n,o,c,l){this.text=e,this.style=t,this.width=r,this.height=i,this.lines=s,this.lineWidths=n,this.lineHeight=o,this.maxLineWidth=c,this.fontProperties=l}static measureText(e=" ",t,r=m._canvas,i=t.wordWrap){var v;const s=`${e}:${t.styleKey}`;if(m._measurementCache[s])return m._measurementCache[s];const n=ee(t),o=m.measureFont(n);o.fontSize===0&&(o.fontSize=t.fontSize,o.ascent=t.fontSize);const c=m.__context;c.font=n;const h=(i?m._wordWrap(e,t,r):e).split(/(?:\r\n|\r|\n)/),d=new Array(h.length);let f=0;for(let b=0;b<h.length;b++){const T=m._measureText(h[b],t.letterSpacing,c);d[b]=T,f=Math.max(f,T)}const g=((v=t._stroke)==null?void 0:v.width)||0;let p=f+g;t.dropShadow&&(p+=t.dropShadow.distance);const u=t.lineHeight||o.fontSize;let x=Math.max(u,o.fontSize+g)+(h.length-1)*(u+t.leading);return t.dropShadow&&(x+=t.dropShadow.distance),new m(e,t,p,x,h,d,u+t.leading,f,o)}static _measureText(e,t,r){let i=!1;m.experimentalLetterSpacingSupported&&(m.experimentalLetterSpacing?(r.letterSpacing=`${t}px`,r.textLetterSpacing=`${t}px`,i=!0):(r.letterSpacing="0px",r.textLetterSpacing="0px"));const s=r.measureText(e);let n=s.width;const o=-s.actualBoundingBoxLeft;let l=s.actualBoundingBoxRight-o;if(n>0)if(i)n-=t,l-=t;else{const h=(m.graphemeSegmenter(e).length-1)*t;n+=h,l+=h}return Math.max(n,l)}static _wordWrap(e,t,r=m._canvas){const i=r.getContext("2d",se);let s=0,n="",o="";const c=Object.create(null),{letterSpacing:l,whiteSpace:h}=t,d=m._collapseSpaces(h),f=m._collapseNewlines(h);let g=!d;const p=t.wordWrapWidth+l,u=m._tokenize(e);for(let x=0;x<u.length;x++){let _=u[x];if(m._isNewline(_)){if(!f){o+=m._addLine(n),g=!d,n="",s=0;continue}_=" "}if(d){const b=m.isBreakingSpace(_),T=m.isBreakingSpace(n[n.length-1]);if(b&&T)continue}const v=m._getFromCache(_,l,c,i);if(v>p)if(n!==""&&(o+=m._addLine(n),n="",s=0),m.canBreakWords(_,t.breakWords)){const b=m.wordWrapSplit(_);for(let T=0;T<b.length;T++){let C=b[T],B=C,R=1;for(;b[T+R];){const L=b[T+R];if(!m.canBreakChars(B,L,_,T,t.breakWords))C+=L;else break;B=L,R++}T+=R-1;const M=m._getFromCache(C,l,c,i);M+s>p&&(o+=m._addLine(n),g=!1,n="",s=0),n+=C,s+=M}}else{n.length>0&&(o+=m._addLine(n),n="",s=0);const b=x===u.length-1;o+=m._addLine(_,!b),g=!1,n="",s=0}else v+s>p&&(g=!1,o+=m._addLine(n),n="",s=0),(n.length>0||!m.isBreakingSpace(_)||g)&&(n+=_,s+=v)}return o+=m._addLine(n,!1),o}static _addLine(e,t=!0){return e=m._trimRight(e),e=t?`${e}
`:e,e}static _getFromCache(e,t,r,i){let s=r[e];return typeof s!="number"&&(s=m._measureText(e,t,i)+t,r[e]=s),s}static _collapseSpaces(e){return e==="normal"||e==="pre-line"}static _collapseNewlines(e){return e==="normal"}static _trimRight(e){if(typeof e!="string")return"";for(let t=e.length-1;t>=0;t--){const r=e[t];if(!m.isBreakingSpace(r))break;e=e.slice(0,-1)}return e}static _isNewline(e){return typeof e!="string"?!1:m._newlines.includes(e.charCodeAt(0))}static isBreakingSpace(e,t){return typeof e!="string"?!1:m._breakingSpaces.includes(e.charCodeAt(0))}static _tokenize(e){const t=[];let r="";if(typeof e!="string")return t;for(let i=0;i<e.length;i++){const s=e[i],n=e[i+1];if(m.isBreakingSpace(s,n)||m._isNewline(s)){r!==""&&(t.push(r),r=""),t.push(s);continue}r+=s}return r!==""&&t.push(r),t}static canBreakWords(e,t){return t}static canBreakChars(e,t,r,i,s){return!0}static wordWrapSplit(e){return m.graphemeSegmenter(e)}static measureFont(e){if(m._fonts[e])return m._fonts[e];const t=m._context;t.font=e;const r=t.measureText(m.METRICS_STRING+m.BASELINE_SYMBOL),i={ascent:r.actualBoundingBoxAscent,descent:r.actualBoundingBoxDescent,fontSize:r.actualBoundingBoxAscent+r.actualBoundingBoxDescent};return m._fonts[e]=i,i}static clearMetrics(e=""){e?delete m._fonts[e]:m._fonts={}}static get _canvas(){if(!m.__canvas){let e;try{const t=new OffscreenCanvas(0,0),r=t.getContext("2d",se);if(r!=null&&r.measureText)return m.__canvas=t,t;e=j.get().createCanvas()}catch{e=j.get().createCanvas()}e.width=e.height=10,m.__canvas=e}return m.__canvas}static get _context(){return m.__context||(m.__context=m._canvas.getContext("2d",se)),m.__context}};A.METRICS_STRING="|ÉqÅ";A.BASELINE_SYMBOL="M";A.BASELINE_MULTIPLIER=1.4;A.HEIGHT_MULTIPLIER=2;A.graphemeSegmenter=(()=>{if(typeof(Intl==null?void 0:Intl.Segmenter)=="function"){const a=new Intl.Segmenter;return e=>[...a.segment(e)].map(t=>t.segment)}return a=>[...a]})();A.experimentalLetterSpacing=!1;A._fonts={};A._newlines=[10,13];A._breakingSpaces=[9,32,8192,8193,8194,8195,8196,8197,8198,8200,8201,8202,8287,12288];A._measurementCache={};let I=A;const Se=1e5;function te(a,e,t,r=0){if(a.texture===F.WHITE&&!a.fill)return U.shared.setValue(a.color).setAlpha(a.alpha??1).toHexa();if(a.fill){if(a.fill instanceof St){const i=a.fill,s=e.createPattern(i.texture.source.resource,"repeat"),n=i.transform.copyTo(k.shared);return n.scale(i.texture.frame.width,i.texture.frame.height),s.setTransform(n),s}else if(a.fill instanceof wt){const i=a.fill,s=i.type==="linear",n=i.textureSpace==="local";let o=1,c=1;n&&t&&(o=t.width+r,c=t.height+r);let l,h=!1;if(s){const{start:d,end:f}=i;l=e.createLinearGradient(d.x*o,d.y*c,f.x*o,f.y*c),h=Math.abs(f.x-d.x)<Math.abs((f.y-d.y)*.1)}else{const{center:d,innerRadius:f,outerCenter:g,outerRadius:p}=i;l=e.createRadialGradient(d.x*o,d.y*c,f*o,g.x*o,g.y*c,p*o)}if(h&&n&&t){const d=t.lineHeight/c;for(let f=0;f<t.lines.length;f++){const g=(f*t.lineHeight+r/2)/c;i.colorStops.forEach(p=>{const u=g+p.offset*d;l.addColorStop(Math.floor(u*Se)/Se,U.shared.setValue(p.color).toHex())})}}else i.colorStops.forEach(d=>{l.addColorStop(d.offset,U.shared.setValue(d.color).toHex())});return l}}else{const i=e.createPattern(a.texture.source.resource,"repeat"),s=a.matrix.copyTo(k.shared);return s.scale(a.texture.frame.width,a.texture.frame.height),i.setTransform(s),i}return V("FillStyle not recognised",a),"red"}function je(a){if(a==="")return[];typeof a=="string"&&(a=[a]);const e=[];for(let t=0,r=a.length;t<r;t++){const i=a[t];if(Array.isArray(i)){if(i.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${i.length}.`);if(i[0].length===0||i[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const s=i[0].charCodeAt(0),n=i[1].charCodeAt(0);if(n<s)throw new Error("[BitmapFont]: Invalid character range.");for(let o=s,c=n;o<=c;o++)e.push(String.fromCharCode(o))}else e.push(...Array.from(i))}if(e.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return e}const Xe=class Ke extends Vt{constructor(e){super(),this.resolution=1,this.pages=[],this._padding=0,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const t={...Ke.defaultOptions,...e};this._textureSize=t.textureSize,this._mipmap=t.mipmap;const r=t.style.clone();t.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=F.WHITE,r._fill.fill=null),this.applyFillAsTint=t.overrideFill;const i=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const s=ee(r);t.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/i):r.fontSize=this.baseRenderedFontSize=i,this._style=r,this._skipKerning=t.skipKerning??!1,this.resolution=t.resolution??1,this._padding=t.padding??4,this.fontMetrics=I.measureFont(s),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(e){var x,_;const t=je(e).filter(v=>!this._currentChars.includes(v)).filter((v,b,T)=>T.indexOf(v)===b);if(!t.length)return;this._currentChars=[...this._currentChars,...t];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:i,context:s}=r.canvasAndContext,n=r.texture.source;const o=this._style;let c=this._currentX,l=this._currentY;const h=this.baseRenderedFontSize/this.baseMeasurementFontSize,d=this._padding*h;let f=0,g=!1;const p=i.width/this.resolution,u=i.height/this.resolution;for(let v=0;v<t.length;v++){const b=t[v],T=I.measureText(b,o,i,!1);T.lineHeight=T.height;const C=T.width*h,B=Math.ceil((o.fontStyle==="italic"?2:1)*C),R=T.height*h,M=B+d*2,L=R+d*2;if(g=!1,b!==`
`&&b!=="\r"&&b!=="	"&&b!==" "&&(g=!0,f=Math.ceil(Math.max(L,f))),c+M>p&&(l+=f,f=L,c=0,l+f>u)){n.update();const D=this._nextPage();i=D.canvasAndContext.canvas,s=D.canvasAndContext.context,n=D.texture.source,l=0}const K=C/h-(((x=o.dropShadow)==null?void 0:x.distance)??0)-(((_=o._stroke)==null?void 0:_.width)??0);if(this.chars[b]={id:b.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:K,kerning:{}},g){this._drawGlyph(s,T,c+d,l+d,h,o);const D=n.width*h,S=n.height*h,ie=new de(c/D*n.width,l/S*n.height,M/D*n.width,L/S*n.height);this.chars[b].texture=new F({source:n,frame:ie}),c+=Math.ceil(M)}}n.update(),this._currentX=c,this._currentY=l,this._skipKerning&&this._applyKerning(t,s)}get pageTextures(){return H(O,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(e,t){const r=this._measureCache;for(let i=0;i<e.length;i++){const s=e[i];for(let n=0;n<this._currentChars.length;n++){const o=this._currentChars[n];let c=r[s];c||(c=r[s]=t.measureText(s).width);let l=r[o];l||(l=r[o]=t.measureText(o).width);let h=t.measureText(s+o).width,d=h-(c+l);d&&(this.chars[s].kerning[o]=d),h=t.measureText(s+o).width,d=h-(c+l),d&&(this.chars[o].kerning[s]=d)}}}_nextPage(){this._currentPageIndex++;const e=this.resolution,t=E.getOptimalCanvasAndContext(this._textureSize,this._textureSize,e);this._setupContext(t.context,this._style,e);const r=e*(this.baseRenderedFontSize/this.baseMeasurementFontSize),i=new F({source:new Ct({resource:t.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload",autoGenerateMipmaps:this._mipmap})}),s={canvasAndContext:t,texture:i};return this.pages[this._currentPageIndex]=s,s}_setupContext(e,t,r){t.fontSize=this.baseRenderedFontSize,e.scale(r,r),e.font=ee(t),t.fontSize=this.baseMeasurementFontSize,e.textBaseline=t.textBaseline;const i=t._stroke,s=(i==null?void 0:i.width)??0;if(i&&(e.lineWidth=s,e.lineJoin=i.join,e.miterLimit=i.miterLimit,e.strokeStyle=te(i,e)),t._fill&&(e.fillStyle=te(t._fill,e)),t.dropShadow){const n=t.dropShadow,o=U.shared.setValue(n.color).toArray(),c=n.blur*r,l=n.distance*r;e.shadowColor=`rgba(${o[0]*255},${o[1]*255},${o[2]*255},${n.alpha})`,e.shadowBlur=c,e.shadowOffsetX=Math.cos(n.angle)*l,e.shadowOffsetY=Math.sin(n.angle)*l}else e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}_drawGlyph(e,t,r,i,s,n){const o=t.text,c=t.fontProperties,l=n._stroke,h=((l==null?void 0:l.width)??0)*s,d=r+h/2,f=i-h/2,g=c.descent*s,p=t.lineHeight*s;n.stroke&&h&&e.strokeText(o,d,f+p-g),n._fill&&e.fillText(o,d,f+p-g)}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{canvasAndContext:t,texture:r}=this.pages[e];E.returnCanvasAndContext(t),r.destroy(!0)}this.pages=null}};Xe.defaultOptions={textureSize:512,style:new $,mipmap:!0};let we=Xe;function Ne(a,e,t,r){const i={width:0,height:0,offsetY:0,scale:e.fontSize/t.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};i.offsetY=t.baseLineOffset;let s=i.lines[0],n=null,o=!0;const c={width:0,start:0,index:0,positions:[],chars:[]},l=p=>{const u=s.width;for(let x=0;x<c.index;x++){const _=p.positions[x];s.chars.push(p.chars[x]),s.charPositions.push(_+u)}s.width+=p.width,o=!1,c.width=0,c.index=0,c.chars.length=0},h=()=>{let p=s.chars.length-1;if(r){let u=s.chars[p];for(;u===" ";)s.width-=t.chars[u].xAdvance,u=s.chars[--p]}i.width=Math.max(i.width,s.width),s={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},o=!0,i.lines.push(s),i.height+=t.lineHeight},d=t.baseMeasurementFontSize/e.fontSize,f=e.letterSpacing*d,g=e.wordWrapWidth*d;for(let p=0;p<a.length+1;p++){let u;const x=p===a.length;x||(u=a[p]);const _=t.chars[u]||t.chars[" "];if(/(?:\s)/.test(u)||u==="\r"||u===`
`||x){if(!o&&e.wordWrap&&s.width+c.width-f>g?(h(),l(c),x||s.charPositions.push(0)):(c.start=s.width,l(c),x||s.charPositions.push(0)),u==="\r"||u===`
`)s.width!==0&&h();else if(!x){const C=_.xAdvance+(_.kerning[n]||0)+f;s.width+=C,s.spaceWidth=C,s.spacesIndex.push(s.charPositions.length),s.chars.push(u)}}else{const T=_.kerning[n]||0,C=_.xAdvance+T+f;c.positions[c.index++]=c.width+T,c.chars.push(u),c.width+=C}n=u}return h(),e.align==="center"?Yt(i):e.align==="right"?jt(i):e.align==="justify"&&Xt(i),i}function Yt(a){for(let e=0;e<a.lines.length;e++){const t=a.lines[e],r=a.width/2-t.width/2;for(let i=0;i<t.charPositions.length;i++)t.charPositions[i]+=r}}function jt(a){for(let e=0;e<a.lines.length;e++){const t=a.lines[e],r=a.width-t.width;for(let i=0;i<t.charPositions.length;i++)t.charPositions[i]+=r}}function Xt(a){const e=a.width;for(let t=0;t<a.lines.length;t++){const r=a.lines[t];let i=0,s=r.spacesIndex[i++],n=0;const o=r.spacesIndex.length,l=(e-r.width)/o;for(let h=0;h<r.charPositions.length;h++)h===s&&(s=r.spacesIndex[i++],n+=l),r.charPositions[h]+=n}}let q=0;class Kt{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(e,t){var n;let r=`${t.fontFamily}-bitmap`,i=!0;if(t._fill.fill&&!t._stroke)r+=t._fill.fill.styleKey,i=!1;else if(t._stroke||t.dropShadow){let o=t.styleKey;o=o.substring(0,o.lastIndexOf("-")),r=`${o}-bitmap`,i=!1}if(!G.has(r)){const o=new we({style:t,overrideFill:i,overrideSize:!0,...this.defaultOptions});q++,q>50&&V("BitmapText",`You have dynamically created ${q} bitmap fonts, this can be inefficient. Try pre installing your font styles using \`BitmapFont.install({name:"style1", style})\``),o.once("destroy",()=>{q--,G.remove(r)}),G.set(r,o)}const s=G.get(r);return(n=s.ensureCharacters)==null||n.call(s,e),s}getLayout(e,t,r=!0){const i=this.getFont(e,t);return Ne([...e],t,i,r)}measureText(e,t,r=!0){return this.getLayout(e,t,r)}install(...e){var l,h,d,f;let t=e[0];typeof t=="string"&&(t={name:t,style:e[1],chars:(l=e[2])==null?void 0:l.chars,resolution:(h=e[2])==null?void 0:h.resolution,padding:(d=e[2])==null?void 0:d.padding,skipKerning:(f=e[2])==null?void 0:f.skipKerning},H(O,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=t==null?void 0:t.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");t={...this.defaultOptions,...t};const i=t.style,s=i instanceof $?i:new $(i),n=s._fill.fill!==null&&s._fill.fill!==void 0,o=new we({style:s,overrideFill:n,skipKerning:t.skipKerning,padding:t.padding,resolution:t.resolution,overrideSize:!1}),c=je(t.chars);return o.ensureCharacters(c.join("")),G.set(`${r}-bitmap`,o),o.once("destroy",()=>G.remove(`${r}-bitmap`)),o}uninstall(e){const t=`${e}-bitmap`,r=G.get(t);r&&r.destroy()}}const Nt=new Kt;class qe{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}qe.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"filter"};function qt(a,e){e.clear();const t=e.matrix;for(let r=0;r<a.length;r++){const i=a[r];i.globalDisplayStatus<7||(e.matrix=i.worldTransform,e.addBounds(i.bounds))}return e.matrix=t,e}const Qt=new ue({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class Qe{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new Y({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new He({}),this.renderer=e}get activeBackTexture(){var e;return(e=this._activeFilterData)==null?void 0:e.backTexture}push(e){var g;const t=this.renderer,r=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const i=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,r.length===0){i.skip=!0;return}const s=i.bounds;if(e.renderables?qt(e.renderables,s):e.filterEffect.filterArea?(s.clear(),s.addRect(e.filterEffect.filterArea),s.applyMatrix(e.container.worldTransform)):e.container.getFastGlobalBounds(!0,s),e.container){const u=(e.container.renderGroup||e.container.parentRenderGroup).cacheToLocalTransform;u&&s.applyMatrix(u)}const n=t.renderTarget.renderTarget.colorTexture.source;let o=1/0,c=0,l=!0,h=!1,d=!1,f=!0;for(let p=0;p<r.length;p++){const u=r[p];if(o=Math.min(o,u.resolution==="inherit"?n._resolution:u.resolution),c+=u.padding,u.antialias==="off"?l=!1:u.antialias==="inherit"&&l&&(l=n.antialias),u.clipToViewport||(f=!1),!!!(u.compatibleRenderers&t.type)){d=!1;break}if(u.blendRequired&&!(((g=t.backBuffer)==null?void 0:g.useBackBuffer)??!0)){V("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),d=!1;break}d=u.enabled||d,h||(h=u.blendRequired)}if(!d){i.skip=!0;return}if(f){const p=t.renderTarget.rootViewPort,u=t.renderTarget.renderTarget.resolution;s.fitBounds(0,p.width/u,0,p.height/u)}if(s.scale(o).ceil().scale(1/o).pad(c|0),!s.isPositive){i.skip=!0;return}i.skip=!1,i.bounds=s,i.blendRequired=h,i.container=e.container,i.filterEffect=e.filterEffect,i.previousRenderSurface=t.renderTarget.renderSurface,i.inputTexture=z.getOptimalTexture(s.width,s.height,o,l),t.renderTarget.bind(i.inputTexture,!0),t.globalUniforms.push({offset:s})}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,i=t.bounds;let s=F.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const o=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,c=e.renderTarget.getRenderTarget(t.previousRenderSurface);s=this.getBackTexture(c,i,o)}t.backTexture=s;const n=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(s.source,3),e.globalUniforms.pop(),n.length===1)n[0].apply(this,r,t.previousRenderSurface,!1),z.returnTexture(r);else{let o=t.inputTexture,c=z.getOptimalTexture(i.width,i.height,o.source._resolution,!1),l=0;for(l=0;l<n.length-1;++l){n[l].apply(this,o,c,!0);const d=o;o=c,c=d}n[l].apply(this,o,t.previousRenderSurface,!1),z.returnTexture(o),z.returnTexture(c)}t.blendRequired&&z.returnTexture(s)}getBackTexture(e,t,r){const i=e.colorTexture.source._resolution,s=z.getOptimalTexture(t.width,t.height,i,!1);let n=t.minX,o=t.minY;r&&(n-=r.minX,o-=r.minY),n=Math.floor(n*i),o=Math.floor(o*i);const c=Math.ceil(t.width*i),l=Math.ceil(t.height*i);return this.renderer.renderTarget.copyToTexture(e,s,{x:n,y:o},{width:c,height:l},{x:0,y:0}),s}applyFilter(e,t,r,i){const s=this.renderer,n=this._filterStack[this._filterStackIndex],o=n.bounds,c=Bt.shared,h=n.previousRenderSurface===r;let d=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,f=this._filterStackIndex-1;for(;f>0&&this._filterStack[f].skip;)--f;f>0&&(d=this._filterStack[f].inputTexture.source._resolution);const g=this._filterGlobalUniforms,p=g.uniforms,u=p.uOutputFrame,x=p.uInputSize,_=p.uInputPixel,v=p.uInputClamp,b=p.uGlobalFrame,T=p.uOutputTexture;if(h){let R=this._filterStackIndex;for(;R>0;){R--;const M=this._filterStack[this._filterStackIndex-1];if(!M.skip){c.x=M.bounds.minX,c.y=M.bounds.minY;break}}u[0]=o.minX-c.x,u[1]=o.minY-c.y}else u[0]=0,u[1]=0;u[2]=t.frame.width,u[3]=t.frame.height,x[0]=t.source.width,x[1]=t.source.height,x[2]=1/x[0],x[3]=1/x[1],_[0]=t.source.pixelWidth,_[1]=t.source.pixelHeight,_[2]=1/_[0],_[3]=1/_[1],v[0]=.5*_[2],v[1]=.5*_[3],v[2]=t.frame.width*x[2]-.5*_[2],v[3]=t.frame.height*x[3]-.5*_[3];const C=this.renderer.renderTarget.rootRenderTarget.colorTexture;b[0]=c.x*d,b[1]=c.y*d,b[2]=C.source.width*d,b[3]=C.source.height*d;const B=this.renderer.renderTarget.getRenderTarget(r);if(s.renderTarget.bind(r,!!i),r instanceof F?(T[0]=r.frame.width,T[1]=r.frame.height):(T[0]=B.width,T[1]=B.height),T[2]=B.isRoot?-1:1,g.update(),s.renderPipes.uniformBatch){const R=s.renderPipes.uniformBatch.getUboResource(g);this._globalFilterBindGroup.setResource(R,0)}else this._globalFilterBindGroup.setResource(g,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,s.encoder.draw({geometry:Qt,shader:e,state:e._state,topology:"triangle-list"}),s.type===fe.WEBGL&&s.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new Le,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,i=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),s=t.worldTransform.copyTo(k.shared),n=t.renderGroup||t.parentRenderGroup;return n&&n.cacheToLocalTransform&&s.prepend(n.cacheToLocalTransform),s.invert(),i.prepend(s),i.scale(1/t.texture.frame.width,1/t.texture.frame.height),i.translate(t.anchor.x,t.anchor.y),i}}Qe.extension={type:[y.WebGLSystem,y.WebGPUSystem],name:"filter"};const Je=class Ze extends ue{constructor(...e){let t=e[0]??{};t instanceof Float32Array&&(H(O,"use new MeshGeometry({ positions, uvs, indices }) instead"),t={positions:t,uvs:e[1],indices:e[2]}),t={...Ze.defaultOptions,...t};const r=t.positions||new Float32Array([0,0,1,0,1,1,0,1]);let i=t.uvs;i||(t.positions?i=new Float32Array(r.length):i=new Float32Array([0,0,1,0,1,1,0,1]));const s=t.indices||new Uint32Array([0,1,2,0,2,3]),n=t.shrinkBuffersToFit,o=new X({data:r,label:"attribute-mesh-positions",shrinkToFit:n,usage:W.VERTEX|W.COPY_DST}),c=new X({data:i,label:"attribute-mesh-uvs",shrinkToFit:n,usage:W.VERTEX|W.COPY_DST}),l=new X({data:s,label:"index-mesh-buffer",shrinkToFit:n,usage:W.INDEX|W.COPY_DST});super({attributes:{aPosition:{buffer:o,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:c,format:"float32x2",stride:2*4,offset:0}},indexBuffer:l,topology:t.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};Je.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let me=Je;function Jt(a){const e=a._stroke,t=a._fill,i=[`div { ${[`color: ${U.shared.setValue(t.color).toHex()}`,`font-size: ${a.fontSize}px`,`font-family: ${a.fontFamily}`,`font-weight: ${a.fontWeight}`,`font-style: ${a.fontStyle}`,`font-variant: ${a.fontVariant}`,`letter-spacing: ${a.letterSpacing}px`,`text-align: ${a.align}`,`padding: ${a.padding}px`,`white-space: ${a.whiteSpace==="pre"&&a.wordWrap?"pre-wrap":a.whiteSpace}`,...a.lineHeight?[`line-height: ${a.lineHeight}px`]:[],...a.wordWrap?[`word-wrap: ${a.breakWords?"break-all":"break-word"}`,`max-width: ${a.wordWrapWidth}px`]:[],...e?[tt(e)]:[],...a.dropShadow?[et(a.dropShadow)]:[],...a.cssOverrides].join(";")} }`];return Zt(a.tagStyles,i),i.join(" ")}function et(a){const e=U.shared.setValue(a.color).setAlpha(a.alpha).toHexa(),t=Math.round(Math.cos(a.angle)*a.distance),r=Math.round(Math.sin(a.angle)*a.distance),i=`${t}px ${r}px`;return a.blur>0?`text-shadow: ${i} ${a.blur}px ${e}`:`text-shadow: ${i} ${e}`}function tt(a){return[`-webkit-text-stroke-width: ${a.width}px`,`-webkit-text-stroke-color: ${U.shared.setValue(a.color).toHex()}`,`text-stroke-width: ${a.width}px`,`text-stroke-color: ${U.shared.setValue(a.color).toHex()}`,"paint-order: stroke"].join(";")}const Ce={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},Be={fill:a=>`color: ${U.shared.setValue(a).toHex()}`,breakWords:a=>`word-wrap: ${a?"break-all":"break-word"}`,stroke:tt,dropShadow:et};function Zt(a,e){for(const t in a){const r=a[t],i=[];for(const s in r)Be[s]?i.push(Be[s](r[s])):Ce[s]&&i.push(Ce[s].replace("{{VALUE}}",r[s]));e.push(`${t} { ${i.join(";")} }`)}}class xe extends ${constructor(e={}){super(e),this._cssOverrides=[],this.cssOverrides??(this.cssOverrides=e.cssOverrides),this.tagStyles=e.tagStyles??{}}set cssOverrides(e){this._cssOverrides=e instanceof Array?e:[e],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=Pt(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new xe({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow?{...this.dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=Jt(this)),this._cssStyle}addOverride(...e){const t=e.filter(r=>!this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides.push(...t),this.update())}removeOverride(...e){const t=e.filter(r=>this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides=this.cssOverrides.filter(r=>!t.includes(r)),this.update())}set fill(e){typeof e!="string"&&typeof e!="number"&&V("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=e}set stroke(e){e&&typeof e!="string"&&typeof e!="number"&&V("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=e}}const Pe="http://www.w3.org/2000/svg",Re="http://www.w3.org/1999/xhtml";class rt{constructor(){this.svgRoot=document.createElementNS(Pe,"svg"),this.foreignObject=document.createElementNS(Pe,"foreignObject"),this.domElement=document.createElementNS(Re,"div"),this.styleElement=document.createElementNS(Re,"style"),this.image=new Image;const{foreignObject:e,svgRoot:t,styleElement:r,domElement:i}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(i)}}let Me;function er(a,e,t,r){r||(r=Me||(Me=new rt));const{domElement:i,styleElement:s,svgRoot:n}=r;i.innerHTML=`<style>${e.cssStyle};</style><div style='padding:0'>${a}</div>`,i.setAttribute("style","transform-origin: top left; display: inline-block"),t&&(s.textContent=t),document.body.appendChild(n);const o=i.getBoundingClientRect();n.remove();const c=e.padding*2;return{width:o.width-c,height:o.height-c}}class it{constructor(e,t){this.state=Z.for2d(),this._graphicsBatchesHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=e,this._adaptor=t,this._adaptor.init(),this.renderer.renderableGC.addManagedHash(this,"_graphicsBatchesHash")}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],i=this.renderer.graphicsContext.updateGpuContext(t);return!!(i.isBatchable||r!==i.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e.didViewUpdate&&this._rebuild(e),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let r=0;r<t.length;r++){const i=t[r];i._batcher.updateElement(i)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid),e.off("destroyed",this._destroyRenderableBound)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const s=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const n=s.resources.localUniforms.uniforms;n.uTransformMatrix=e.groupTransform,n.uRound=t._roundPixels|e._roundPixels,re(e.groupColorAlpha,n.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,i=this._getBatchesForRenderable(e);for(let s=0;s<i.length;s++){const n=i[s];r.addToBatch(n,t)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),i=this.renderer._roundPixels|e._roundPixels,s=r.batches.map(n=>{const o=w.get(Rt);return n.copyTo(o),o.renderable=e,o.roundPixels=i,o});return this._graphicsBatchesHash[e.uid]===void 0&&e.on("destroyed",this._destroyRenderableBound),this._graphicsBatchesHash[e.uid]=s,s}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach(t=>{w.return(t)}),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}it.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"graphics"};const st=class nt extends me{constructor(...e){super({});let t=e[0]??{};typeof t=="number"&&(H(O,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(e){e={...nt.defaultOptions,...e},this.verticesX=this.verticesX??e.verticesX,this.verticesY=this.verticesY??e.verticesY,this.width=this.width??e.width,this.height=this.height??e.height;const t=this.verticesX*this.verticesY,r=[],i=[],s=[],n=this.verticesX-1,o=this.verticesY-1,c=this.width/n,l=this.height/o;for(let d=0;d<t;d++){const f=d%this.verticesX,g=d/this.verticesX|0;r.push(f*c,g*l),i.push(f/n,g/o)}const h=n*o;for(let d=0;d<h;d++){const f=d%n,g=d/n|0,p=g*this.verticesX+f,u=g*this.verticesX+f+1,x=(g+1)*this.verticesX+f,_=(g+1)*this.verticesX+f+1;s.push(p,u,x,u,_,x)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(i),this.indexBuffer.data=new Uint32Array(s),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};st.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let tr=st;class _e{constructor(){this.batcherName="default",this.packAsQuad=!1,this.indexOffset=0,this.attributeOffset=0,this.roundPixels=0,this._batcher=null,this._batch=null,this._textureMatrixUpdateId=-1,this._uvUpdateId=-1}get blendMode(){return this.renderable.groupBlendMode}get topology(){return this._topology||this.geometry.topology}set topology(e){this._topology=e}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.geometry=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}setTexture(e){this.texture!==e&&(this.texture=e,this._textureMatrixUpdateId=-1)}get uvs(){const t=this.geometry.getBuffer("aUV"),r=t.data;let i=r;const s=this.texture.textureMatrix;return s.isSimple||(i=this._transformedUvs,(this._textureMatrixUpdateId!==s._updateID||this._uvUpdateId!==t._updateID)&&((!i||i.length<r.length)&&(i=this._transformedUvs=new Float32Array(r.length)),this._textureMatrixUpdateId=s._updateID,this._uvUpdateId=t._updateID,s.multiplyUvs(r,i))),i}get positions(){return this.geometry.positions}get indices(){return this.geometry.indices}get color(){return this.renderable.groupColorAlpha}get groupTransform(){return this.renderable.groupTransform}get attributeSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class at{constructor(e,t){this.localUniforms=new Y({uTransformMatrix:{value:new k,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new He({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=e,this._adaptor=t,this._adaptor.init(),e.renderableGC.addManagedHash(this,"_gpuBatchableMeshHash"),e.renderableGC.addManagedHash(this,"_meshDataHash")}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,i=e.batched;if(t.batched=i,r!==i)return!0;if(i){const s=e._geometry;if(s.indices.length!==t.indexSize||s.positions.length!==t.vertexSize)return t.indexSize=s.indices.length,t.vertexSize=s.positions.length,!0;const n=this._getBatchableMesh(e);return n.texture.uid!==e._texture.uid&&(n._textureMatrixUpdateId=-1),!n._batcher.checkAndUpdateTexture(n,e._texture)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:i}=this._getMeshData(e);if(i){const s=this._getBatchableMesh(e);s.setTexture(e._texture),s.geometry=e._geometry,r.addToBatch(s,t)}else r.break(t),t.add(e)}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.setTexture(e._texture),t.geometry=e._geometry,t._batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];t&&(w.return(t),this._gpuBatchableMeshHash[e.uid]=null),e.off("destroyed",this._destroyRenderableBound)}execute(e){if(!e.isRenderable)return;e.state.blendMode=pe(e.groupBlendMode,e.texture._source);const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),re(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){var t,r;return this._meshDataHash[e.uid]={batched:e.batched,indexSize:(t=e._geometry.indices)==null?void 0:t.length,vertexSize:(r=e._geometry.positions)==null?void 0:r.length},e.on("destroyed",this._destroyRenderableBound),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=w.get(_e);return t.renderable=e,t.setTexture(e._texture),t.transform=e.groupTransform,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&w.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}at.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"mesh"};class rr{execute(e,t){const r=e.state,i=e.renderer,s=t.shader||e.defaultShader;s.resources.uTexture=t.texture._source,s.resources.uniforms=e.localUniforms;const n=i.gl,o=e.getBuffers(t);i.shader.bind(s),i.state.set(r),i.geometry.bind(o.geometry,s.glProgram);const l=o.geometry.indexBuffer.data.BYTES_PER_ELEMENT===2?n.UNSIGNED_SHORT:n.UNSIGNED_INT;n.drawElements(n.TRIANGLES,t.particleChildren.length*6,l,0)}}class ir{execute(e,t){const r=e.renderer,i=t.shader||e.defaultShader;i.groups[0]=r.renderPipes.uniformBatch.getUniformBindGroup(e.localUniforms,!0),i.groups[1]=r.texture.getTextureBindGroup(t.texture);const s=e.state,n=e.getBuffers(t);r.encoder.draw({geometry:n.geometry,shader:t.shader||e.defaultShader,state:s,size:t.particleChildren.length*6})}}function Fe(a,e=null){const t=a*6;if(t>65535?e||(e=new Uint32Array(t)):e||(e=new Uint16Array(t)),e.length!==t)throw new Error(`Out buffer length is incorrect, got ${e.length} and expected ${t}`);for(let r=0,i=0;r<t;r+=6,i+=4)e[r+0]=i+0,e[r+1]=i+1,e[r+2]=i+2,e[r+3]=i+0,e[r+4]=i+2,e[r+5]=i+3;return e}function sr(a){return{dynamicUpdate:Ue(a,!0),staticUpdate:Ue(a,!1)}}function Ue(a,e){const t=[];t.push(`
      
        var index = 0;

        for (let i = 0; i < ps.length; ++i)
        {
            const p = ps[i];

            `);let r=0;for(const s in a){const n=a[s];if(e!==n.dynamic)continue;t.push(`offset = index + ${r}`),t.push(n.code);const o=le(n.format);r+=o.stride/4}t.push(`
            index += stride * 4;
        }
    `),t.unshift(`
        var stride = ${r};
    `);const i=t.join(`
`);return new Function("ps","f32v","u32v",i)}class nr{constructor(e){this._size=0,this._generateParticleUpdateCache={};const t=this._size=e.size??1e3,r=e.properties;let i=0,s=0;for(const h in r){const d=r[h],f=le(d.format);d.dynamic?s+=f.stride:i+=f.stride}this._dynamicStride=s/4,this._staticStride=i/4,this.staticAttributeBuffer=new N(t*4*i),this.dynamicAttributeBuffer=new N(t*4*s),this.indexBuffer=Fe(t);const n=new ue;let o=0,c=0;this._staticBuffer=new X({data:new Float32Array(1),label:"static-particle-buffer",shrinkToFit:!1,usage:W.VERTEX|W.COPY_DST}),this._dynamicBuffer=new X({data:new Float32Array(1),label:"dynamic-particle-buffer",shrinkToFit:!1,usage:W.VERTEX|W.COPY_DST});for(const h in r){const d=r[h],f=le(d.format);d.dynamic?(n.addAttribute(d.attributeName,{buffer:this._dynamicBuffer,stride:this._dynamicStride*4,offset:o*4,format:d.format}),o+=f.size):(n.addAttribute(d.attributeName,{buffer:this._staticBuffer,stride:this._staticStride*4,offset:c*4,format:d.format}),c+=f.size)}n.addIndex(this.indexBuffer);const l=this.getParticleUpdate(r);this._dynamicUpload=l.dynamicUpdate,this._staticUpload=l.staticUpdate,this.geometry=n}getParticleUpdate(e){const t=ar(e);return this._generateParticleUpdateCache[t]?this._generateParticleUpdateCache[t]:(this._generateParticleUpdateCache[t]=this.generateParticleUpdate(e),this._generateParticleUpdateCache[t])}generateParticleUpdate(e){return sr(e)}update(e,t){e.length>this._size&&(t=!0,this._size=Math.max(e.length,this._size*1.5|0),this.staticAttributeBuffer=new N(this._size*this._staticStride*4*4),this.dynamicAttributeBuffer=new N(this._size*this._dynamicStride*4*4),this.indexBuffer=Fe(this._size),this.geometry.indexBuffer.setDataWithSize(this.indexBuffer,this.indexBuffer.byteLength,!0));const r=this.dynamicAttributeBuffer;if(this._dynamicUpload(e,r.float32View,r.uint32View),this._dynamicBuffer.setDataWithSize(this.dynamicAttributeBuffer.float32View,e.length*this._dynamicStride*4,!0),t){const i=this.staticAttributeBuffer;this._staticUpload(e,i.float32View,i.uint32View),this._staticBuffer.setDataWithSize(i.float32View,e.length*this._staticStride*4,!0)}}destroy(){this._staticBuffer.destroy(),this._dynamicBuffer.destroy(),this.geometry.destroy()}}function ar(a){const e=[];for(const t in a){const r=a[t];e.push(t,r.code,r.dynamic?"d":"s")}return e.join("_")}var or=`varying vec2 vUV;
varying vec4 vColor;

uniform sampler2D uTexture;

void main(void){
    vec4 color = texture2D(uTexture, vUV) * vColor;
    gl_FragColor = color;
}`,cr=`attribute vec2 aVertex;
attribute vec2 aUV;
attribute vec4 aColor;

attribute vec2 aPosition;
attribute float aRotation;

uniform mat3 uTranslationMatrix;
uniform float uRound;
uniform vec2 uResolution;
uniform vec4 uColor;

varying vec2 vUV;
varying vec4 vColor;

vec2 roundPixels(vec2 position, vec2 targetSize)
{       
    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
}

void main(void){
    float cosRotation = cos(aRotation);
    float sinRotation = sin(aRotation);
    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;
    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;

    vec2 v = vec2(x, y);
    v = v + aPosition;

    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    if(uRound == 1.0)
    {
        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
    }

    vUV = aUV;
    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;
}
`,ke=`
struct ParticleUniforms {
  uProjectionMatrix:mat3x3<f32>,
  uColor:vec4<f32>,
  uResolution:vec2<f32>,
  uRoundPixels:f32,
};

@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;

@group(1) @binding(0) var uTexture: texture_2d<f32>;
@group(1) @binding(1) var uSampler : sampler;

struct VSOutput {
    @builtin(position) position: vec4<f32>,
    @location(0) uv : vec2<f32>,
    @location(1) color : vec4<f32>,
  };
@vertex
fn mainVertex(
  @location(0) aVertex: vec2<f32>,
  @location(1) aPosition: vec2<f32>,
  @location(2) aUV: vec2<f32>,
  @location(3) aColor: vec4<f32>,
  @location(4) aRotation: f32,
) -> VSOutput {
  
   let v = vec2(
       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),
       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)
   ) + aPosition;

   let position = vec4((uniforms.uProjectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;

  return VSOutput(
   position,
   aUV,
   vColor,
  );
}

@fragment
fn mainFragment(
  @location(0) uv: vec2<f32>,
  @location(1) color: vec4<f32>,
  @builtin(position) position: vec4<f32>,
) -> @location(0) vec4<f32> {

    var sample = textureSample(uTexture, uSampler, uv) * color;
   
    return sample;
}`;class dr extends ge{constructor(){const e=Mt.from({vertex:cr,fragment:or}),t=Ft.from({fragment:{source:ke,entryPoint:"mainFragment"},vertex:{source:ke,entryPoint:"mainVertex"}});super({glProgram:e,gpuProgram:t,resources:{uTexture:F.WHITE.source,uSampler:new Ut({}),uniforms:{uTranslationMatrix:{value:new k,type:"mat3x3<f32>"},uColor:{value:new U(16777215),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}}})}}class ot{constructor(e,t){this.state=Z.for2d(),this._gpuBufferHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.localUniforms=new Y({uTranslationMatrix:{value:new k,type:"mat3x3<f32>"},uColor:{value:new Float32Array(4),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}),this.renderer=e,this.adaptor=t,this.defaultShader=new dr,this.state=Z.for2d()}validateRenderable(e){return!1}addRenderable(e,t){this.renderer.renderPipes.batch.break(t),t.add(e)}getBuffers(e){return this._gpuBufferHash[e.uid]||this._initBuffer(e)}_initBuffer(e){return this._gpuBufferHash[e.uid]=new nr({size:e.particleChildren.length,properties:e._properties}),e.on("destroyed",this._destroyRenderableBound),this._gpuBufferHash[e.uid]}updateRenderable(e){}destroyRenderable(e){this._gpuBufferHash[e.uid].destroy(),this._gpuBufferHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}execute(e){const t=e.particleChildren;if(t.length===0)return;const r=this.renderer,i=this.getBuffers(e);e.texture||(e.texture=t[0].texture);const s=this.state;i.update(t,e._childrenDirty),e._childrenDirty=!1,s.blendMode=pe(e.blendMode,e.texture._source);const n=this.localUniforms.uniforms,o=n.uTranslationMatrix;e.worldTransform.copyTo(o),o.prepend(r.globalUniforms.globalUniformData.projectionMatrix),n.uResolution=r.globalUniforms.globalUniformData.resolution,n.uRound=r._roundPixels|e._roundPixels,re(e.groupColorAlpha,n.uColor,0),this.adaptor.execute(this,e)}destroy(){this.defaultShader&&(this.defaultShader.destroy(),this.defaultShader=null)}}class ct extends ot{constructor(e){super(e,new rr)}}ct.extension={type:[y.WebGLPipes],name:"particle"};class dt extends ot{constructor(e){super(e,new ir)}}dt.extension={type:[y.WebGPUPipes],name:"particle"};const lt=class ht extends tr{constructor(e={}){e={...ht.defaultOptions,...e},super({width:e.width,height:e.height,verticesX:4,verticesY:4}),this.update(e)}update(e){var t,r;this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,this._anchorX=(t=e.anchor)==null?void 0:t.x,this._anchorY=(r=e.anchor)==null?void 0:r.y,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,{width:t,height:r,_leftWidth:i,_rightWidth:s,_topHeight:n,_bottomHeight:o,_anchorX:c,_anchorY:l}=this,h=i+s,d=t>h?1:t/h,f=n+o,g=r>f?1:r/f,p=Math.min(d,g),u=c*t,x=l*r;e[0]=e[8]=e[16]=e[24]=-u,e[2]=e[10]=e[18]=e[26]=i*p-u,e[4]=e[12]=e[20]=e[28]=t-s*p-u,e[6]=e[14]=e[22]=e[30]=t-u,e[1]=e[3]=e[5]=e[7]=-x,e[9]=e[11]=e[13]=e[15]=n*p-x,e[17]=e[19]=e[21]=e[23]=r-o*p-x,e[25]=e[27]=e[29]=e[31]=r-x,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};lt.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let lr=lt;class ut{constructor(e){this._gpuSpriteHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_gpuSpriteHash")}addRenderable(e,t){const r=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e.didViewUpdate&&this._updateBatchableSprite(e,t),t._batcher.updateElement(t)}validateRenderable(e){const t=this._getGpuSprite(e);return!t._batcher.checkAndUpdateTexture(t,e._texture)}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];w.return(t.geometry),w.return(t),this._gpuSpriteHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}_updateBatchableSprite(e,t){t.geometry.update(e),t.setTexture(e._texture)}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=w.get(_e);return t.geometry=w.get(lr),t.renderable=e,t.transform=e.groupTransform,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.didViewUpdate||this._updateBatchableSprite(e,t),e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuSpriteHash)this._gpuSpriteHash[e].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}ut.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"nineSliceSprite"};const hr={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},ur={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let ne,ae;class fr extends ge{constructor(){ne??(ne=De({name:"tiling-sprite-shader",bits:[It,hr,Oe]})),ae??(ae=Ie({name:"tiling-sprite-shader",bits:[Et,ur,Ee]}));const e=new Y({uMapCoord:{value:new k,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new k,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:ae,gpuProgram:ne,resources:{localUniforms:new Y({uTransformMatrix:{value:new k,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:F.EMPTY.source,uSampler:F.EMPTY.source.style}})}updateUniforms(e,t,r,i,s,n){const o=this.resources.tilingUniforms,c=n.width,l=n.height,h=n.textureMatrix,d=o.uniforms.uTextureTransform;d.set(r.a*c/e,r.b*c/t,r.c*l/e,r.d*l/t,r.tx/e,r.ty/t),d.invert(),o.uniforms.uMapCoord=h.mapCoord,o.uniforms.uClampFrame=h.uClampFrame,o.uniforms.uClampOffset=h.uClampOffset,o.uniforms.uTextureTransform=d,o.uniforms.uSizeAnchor[0]=e,o.uniforms.uSizeAnchor[1]=t,o.uniforms.uSizeAnchor[2]=i,o.uniforms.uSizeAnchor[3]=s,n&&(this.resources.uTexture=n.source,this.resources.uSampler=n.source.style)}}class pr extends me{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function gr(a,e){const t=a.anchor.x,r=a.anchor.y;e[0]=-t*a.width,e[1]=-r*a.height,e[2]=(1-t)*a.width,e[3]=-r*a.height,e[4]=(1-t)*a.width,e[5]=(1-r)*a.height,e[6]=-t*a.width,e[7]=(1-r)*a.height}function mr(a,e,t,r){let i=0;const s=a.length/e,n=r.a,o=r.b,c=r.c,l=r.d,h=r.tx,d=r.ty;for(t*=e;i<s;){const f=a[t],g=a[t+1];a[t]=n*f+c*g+h,a[t+1]=o*f+l*g+d,t+=e,i++}}function xr(a,e){const t=a.texture,r=t.frame.width,i=t.frame.height;let s=0,n=0;a.applyAnchorToTexture&&(s=a.anchor.x,n=a.anchor.y),e[0]=e[6]=-s,e[2]=e[4]=1-s,e[1]=e[3]=-n,e[5]=e[7]=1-n;const o=k.shared;o.copyFrom(a._tileTransform.matrix),o.tx/=a.width,o.ty/=a.height,o.invert(),o.scale(a.width/r,a.height/i),mr(e,2,0,o)}const Q=new pr;class ft{constructor(e){this._state=Z.default2d,this._tilingSpriteDataHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_tilingSpriteDataHash")}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const i=t.canBatch;if(i&&i===r){const{batchableMesh:s}=t;return!s._batcher.checkAndUpdateTexture(s,e.texture)}return r!==i}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const i=this._getTilingSpriteData(e),{geometry:s,canBatch:n}=i;if(n){i.batchableMesh||(i.batchableMesh=new _e);const o=i.batchableMesh;e.didViewUpdate&&(this._updateBatchableMesh(e),o.geometry=s,o.renderable=e,o.transform=e.groupTransform,o.setTexture(e._texture)),o.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(o,t)}else r.break(t),i.shader||(i.shader=new fr),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,re(e.groupColorAlpha,r.uColor,0),this._state.blendMode=pe(e.groupBlendMode,e.texture._source),this._renderer.encoder.draw({geometry:Q,shader:t,state:this._state})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:i}=t;e.didViewUpdate&&this._updateBatchableMesh(e),i._batcher.updateElement(i)}else if(e.didViewUpdate){const{shader:i}=t;i.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}}destroyRenderable(e){var r;const t=this._getTilingSpriteData(e);t.batchableMesh=null,(r=t.shader)==null||r.destroy(),this._tilingSpriteDataHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new me({indices:Q.indices,positions:Q.positions.slice(),uvs:Q.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",this._destroyRenderableBound),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,i=e.texture.source.style;i.addressMode!=="repeat"&&(i.addressMode="repeat",i.update()),xr(e,r.uvs),gr(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let i=!0;return this._renderer.type===fe.WEBGL&&(i=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(i||r.source.isPowerOfTwo),t.canBatch}}ft.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"tilingSprite"};const _r={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));
        `}},br={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));
        `}},yr={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));
                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);
                var coverage: f32 = pow(shapeColor.a * alpha, gamma);

                return coverage;
             
            }
        `}},Tr={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));
                float gamma = mix(1.0, 1.0 / 2.2, luma);
                float coverage = pow(shapeColor.a * alpha, gamma);  
              
                return coverage;
            }
        `}};let oe,ce;class vr extends ge{constructor(){const e=new Y({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new k,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=kt();oe??(oe=De({name:"sdf-shader",bits:[At,Gt(t),_r,yr,Oe]})),ce??(ce=Ie({name:"sdf-shader",bits:[zt,Wt(t),br,Tr,Ee]})),super({glProgram:ce,gpuProgram:oe,resources:{localUniforms:e,batchSamplers:Ht(t)}})}}class pt{constructor(e){this._gpuBitmapText={},this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_gpuBitmapText")}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);Ae(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){const t=this._gpuBitmapText[e].context;t.customShader&&(w.return(t.customShader),t.customShader=null),w.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);Ae(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,i=Nt.getFont(e.text,e._style);r.clear(),i.distanceField.type!=="none"&&(r.customShader||(r.customShader=w.get(vr)));const s=Array.from(e.text),n=e._style;let o=i.baseLineOffset;const c=Ne(s,n,i,!0);let l=0;const h=n.padding,d=c.scale;let f=c.width,g=c.height+c.offsetY;n._stroke&&(f+=n._stroke.width/d,g+=n._stroke.width/d),r.translate(-e._anchor._x*f-h,-e._anchor._y*g-h).scale(d,d);const p=i.applyFillAsTint?n._fill.color:16777215;for(let u=0;u<c.lines.length;u++){const x=c.lines[u];for(let _=0;_<x.charPositions.length;_++){const v=s[l++],b=i.chars[v];b!=null&&b.texture&&r.texture(b.texture,p||"black",Math.round(x.charPositions[_]+b.xOffset),Math.round(o+b.yOffset))}o+=i.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=w.get(Lt);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",this._destroyRenderableBound),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,i=G.get(`${r}-bitmap`),{a:s,b:n,c:o,d:c}=e.groupTransform,l=Math.sqrt(s*s+n*n),h=Math.sqrt(o*o+c*c),d=(Math.abs(l)+Math.abs(h))/2,f=i.baseRenderedFontSize/e._style.fontSize,g=d*i.distanceField.range*(1/f);t.customShader.resources.localUniforms.uniforms.uDistance=g}destroy(){for(const e in this._gpuBitmapText)this._destroyRenderableByUid(e);this._gpuBitmapText=null,this._renderer=null}}pt.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"bitmapText"};function Ae(a,e){e.groupTransform=a.groupTransform,e.groupColorAlpha=a.groupColorAlpha,e.groupColor=a.groupColor,e.groupBlendMode=a.groupBlendMode,e.globalDisplayStatus=a.globalDisplayStatus,e.groupTransform=a.groupTransform,e.localDisplayStatus=a.localDisplayStatus,e.groupAlpha=a.groupAlpha,e._roundPixels=a._roundPixels}function he(a,e){const{texture:t,bounds:r}=a;Dt(r,e._anchor,t);const i=e._style.padding;r.minX-=i,r.minY-=i,r.maxX-=i,r.maxY-=i}class gt{constructor(e){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const e in this._gpuText){const t=this._gpuText[e];if(!t)continue;const r=t.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e,t){const i=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(i,t)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r._batcher.updateElement(r)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),w.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),i=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch(s=>{console.error(s)}),e._didTextUpdate=!1,he(i,e)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=e._getKey();this._renderer.htmlText.decreaseReferenceCount(t.currentKey),t.generatingTexture=!0,t.currentKey=r;const i=e.resolution??this._renderer.resolution,s=await this._renderer.htmlText.getManagedTexture(e.text,i,e._style,e._getKey()),n=t.batchableSprite;n.texture=t.texture=s,t.generatingTexture=!1,t.textureNeedsUploading=!0,e.onViewUpdate(),he(n,e)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:F.EMPTY,currentKey:"--",batchableSprite:w.get(Ve),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.transform=e.groupTransform,r.texture=F.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._gpuText[e.uid]=t,e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}gt.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"htmlText"};function Sr(){const{userAgent:a}=j.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(a)}const wr=new Le;function mt(a,e,t,r){const i=wr;i.minX=0,i.minY=0,i.maxX=a.width/r|0,i.maxY=a.height/r|0;const s=z.getOptimalTexture(i.width,i.height,r,!1);return s.source.uploadMethodId="image",s.source.resource=a,s.source.alphaMode="premultiply-alpha-on-upload",s.frame.width=e/r,s.frame.height=t/r,s.source.emit("update",s.source),s.updateUvs(),s}function Cr(a,e){const t=e.fontFamily,r=[],i={},s=/font-family:([^;"\s]+)/g,n=a.match(s);function o(c){i[c]||(r.push(c),i[c]=!0)}if(Array.isArray(t))for(let c=0;c<t.length;c++)o(t[c]);else o(t);n&&n.forEach(c=>{const l=c.split(":")[1].trim();o(l)});for(const c in e.tagStyles){const l=e.tagStyles[c].fontFamily;o(l)}return r}async function Br(a){const t=await(await j.get().fetch(a)).blob(),r=new FileReader;return await new Promise((s,n)=>{r.onloadend=()=>s(r.result),r.onerror=n,r.readAsDataURL(t)})}async function Ge(a,e){const t=await Br(e);return`@font-face {
        font-family: "${a.fontFamily}";
        src: url('${t}');
        font-weight: ${a.fontWeight};
        font-style: ${a.fontStyle};
    }`}const J=new Map;async function Pr(a,e,t){const r=a.filter(i=>G.has(`${i}-and-url`)).map((i,s)=>{if(!J.has(i)){const{url:n}=G.get(`${i}-and-url`);s===0?J.set(i,Ge({fontWeight:e.fontWeight,fontStyle:e.fontStyle,fontFamily:i},n)):J.set(i,Ge({fontWeight:t.fontWeight,fontStyle:t.fontStyle,fontFamily:i},n))}return J.get(i)});return(await Promise.all(r)).join(`
`)}function Rr(a,e,t,r,i){const{domElement:s,styleElement:n,svgRoot:o}=i;s.innerHTML=`<style>${e.cssStyle}</style><div style='padding:0;'>${a}</div>`,s.setAttribute("style",`transform: scale(${t});transform-origin: top left; display: inline-block`),n.textContent=r;const{width:c,height:l}=i.image;return o.setAttribute("width",c.toString()),o.setAttribute("height",l.toString()),new XMLSerializer().serializeToString(o)}function Mr(a,e){const t=E.getOptimalCanvasAndContext(a.width,a.height,e),{context:r}=t;return r.clearRect(0,0,a.width,a.height),r.drawImage(a,0,0),t}function Fr(a,e,t){return new Promise(async r=>{t&&await new Promise(i=>setTimeout(i,100)),a.onload=()=>{r()},a.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(e)}`,a.crossOrigin="anonymous"})}class be{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===fe.WEBGPU}getTexture(e){return this._buildTexturePromise(e.text,e.resolution,e.style)}getManagedTexture(e,t,r,i){if(this._activeTextures[i])return this._increaseReferenceCount(i),this._activeTextures[i].promise;const s=this._buildTexturePromise(e,t,r).then(n=>(this._activeTextures[i].texture=n,n));return this._activeTextures[i]={texture:null,promise:s,usageCount:1},s}async _buildTexturePromise(e,t,r){const i=w.get(rt),s=Cr(e,r),n=await Pr(s,r,xe.defaultTextStyle),o=er(e,r,n,i),c=Math.ceil(Math.ceil(Math.max(1,o.width)+r.padding*2)*t),l=Math.ceil(Math.ceil(Math.max(1,o.height)+r.padding*2)*t),h=i.image,d=2;h.width=(c|0)+d,h.height=(l|0)+d;const f=Rr(e,r,t,n,i);await Fr(h,f,Sr()&&s.length>0);const g=h;let p;this._createCanvas&&(p=Mr(h,t));const u=mt(p?p.canvas:g,h.width-d,h.height-d,t);return this._createCanvas&&(this._renderer.texture.initSource(u.source),E.returnCanvasAndContext(p)),w.return(i),u}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,t.usageCount===0&&(t.texture?this._cleanUp(t):t.promise.then(r=>{t.texture=r,this._cleanUp(t)}).catch(()=>{V("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[e]=null))}_cleanUp(e){z.returnTexture(e.texture),e.texture.source.resource=null,e.texture.source.uploadMethodId="unknown"}getReferenceCount(e){return this._activeTextures[e].usageCount}destroy(){this._activeTextures=null}}be.extension={type:[y.WebGLSystem,y.WebGPUSystem,y.CanvasSystem],name:"htmlText"};be.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"};class xt{constructor(e){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const e in this._gpuText){const t=this._gpuText[e];if(!t)continue;const r=t.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.currentKey!==r}addRenderable(e,t){const i=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(i,t)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r._batcher.updateElement(r)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),w.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),i=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1,he(i,e)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey),t.texture=r.texture=this._renderer.canvasText.getManagedTexture(e),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:w.get(Ve)};return t.batchableSprite.renderable=e,t.batchableSprite.transform=e.groupTransform,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._updateText(e),e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}xt.extension={type:[y.WebGLPipes,y.WebGPUPipes,y.CanvasPipes],name:"text"};function ze(a,e,t){for(let r=0,i=4*t*e;r<e;++r,i+=4)if(a[i+3]!==0)return!1;return!0}function We(a,e,t,r,i){const s=4*e;for(let n=r,o=r*s+4*t;n<=i;++n,o+=s)if(a[o+3]!==0)return!1;return!0}function Ur(a,e=1){const{width:t,height:r}=a,i=a.getContext("2d",{willReadFrequently:!0});if(i===null)throw new TypeError("Failed to get canvas 2D context");const n=i.getImageData(0,0,t,r).data;let o=0,c=0,l=t-1,h=r-1;for(;c<r&&ze(n,t,c);)++c;if(c===r)return de.EMPTY;for(;ze(n,t,h);)--h;for(;We(n,t,o,c,h);)++o;for(;We(n,t,l,c,h);)--l;return++l,++h,new de(o/e,c/e,(l-o)/e,(h-c)/e)}class _t{constructor(e){this._activeTextures={},this._renderer=e}getTextureSize(e,t,r){const i=I.measureText(e||" ",r);let s=Math.ceil(Math.ceil(Math.max(1,i.width)+r.padding*2)*t),n=Math.ceil(Math.ceil(Math.max(1,i.height)+r.padding*2)*t);return s=Math.ceil(s-1e-6),n=Math.ceil(n-1e-6),s=ve(s),n=ve(n),{width:s,height:n}}getTexture(e,t,r,i){typeof e=="string"&&(H("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof $||(e.style=new $(e.style));const{texture:s,canvasAndContext:n}=this.createTextureAndCanvas(e);return this._renderer.texture.initSource(s._source),E.returnCanvasAndContext(n),s}createTextureAndCanvas(e){const{text:t,style:r}=e,i=e.resolution??this._renderer.resolution,s=I.measureText(t||" ",r),n=Math.ceil(Math.ceil(Math.max(1,s.width)+r.padding*2)*i),o=Math.ceil(Math.ceil(Math.max(1,s.height)+r.padding*2)*i),c=E.getOptimalCanvasAndContext(n,o),{canvas:l}=c;this.renderTextToCanvas(t,r,i,c);const h=mt(l,n,o,i);if(r.trim){const d=Ur(l,i);h.frame.copyFrom(d),h.updateUvs()}return{texture:h,canvasAndContext:c}}getManagedTexture(e){e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;const t=e._getKey();if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].texture;const{texture:r,canvasAndContext:i}=this.createTextureAndCanvas(e);return this._activeTextures[t]={canvasAndContext:i,texture:r,usageCount:1},r}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}returnTexture(e){const t=e.source;t.resource=null,t.uploadMethodId="unknown",t.alphaMode="no-premultiply-alpha",z.returnTexture(e)}decreaseReferenceCount(e){const t=this._activeTextures[e];t.usageCount--,t.usageCount===0&&(E.returnCanvasAndContext(t.canvasAndContext),this.returnTexture(t.texture),this._activeTextures[e]=null)}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,i){var v,b,T,C;const{canvas:s,context:n}=i,o=ee(t),c=I.measureText(e||" ",t),l=c.lines,h=c.lineHeight,d=c.lineWidths,f=c.maxLineWidth,g=c.fontProperties,p=s.height;if(n.resetTransform(),n.scale(r,r),n.textBaseline=t.textBaseline,(v=t._stroke)!=null&&v.width){const B=t._stroke;n.lineWidth=B.width,n.miterLimit=B.miterLimit,n.lineJoin=B.join,n.lineCap=B.cap}n.font=o;let u,x;const _=t.dropShadow?2:1;for(let B=0;B<_;++B){const R=t.dropShadow&&B===0,M=R?Math.ceil(Math.max(1,p)+t.padding*2):0,L=M*r;if(R){n.fillStyle="black",n.strokeStyle="black";const S=t.dropShadow,ie=S.color,bt=S.alpha;n.shadowColor=U.shared.setValue(ie).setAlpha(bt).toRgbaString();const yt=S.blur*r,ye=S.distance*r;n.shadowBlur=yt,n.shadowOffsetX=Math.cos(S.angle)*ye,n.shadowOffsetY=Math.sin(S.angle)*ye+L}else{if(n.fillStyle=t._fill?te(t._fill,n,c):null,(b=t._stroke)!=null&&b.width){const S=t._stroke.width*t._stroke.alignment;n.strokeStyle=te(t._stroke,n,c,S)}n.shadowColor="black"}let K=(h-g.fontSize)/2;h-g.fontSize<0&&(K=0);const D=((T=t._stroke)==null?void 0:T.width)??0;for(let S=0;S<l.length;S++)u=D/2,x=D/2+S*h+g.ascent+K,t.align==="right"?u+=f-d[S]:t.align==="center"&&(u+=(f-d[S])/2),(C=t._stroke)!=null&&C.width&&this._drawLetterSpacing(l[S],t,i,u+t.padding,x+t.padding-M,!0),t._fill!==void 0&&this._drawLetterSpacing(l[S],t,i,u+t.padding,x+t.padding-M)}}_drawLetterSpacing(e,t,r,i,s,n=!1){const{context:o}=r,c=t.letterSpacing;let l=!1;if(I.experimentalLetterSpacingSupported&&(I.experimentalLetterSpacing?(o.letterSpacing=`${c}px`,o.textLetterSpacing=`${c}px`,l=!0):(o.letterSpacing="0px",o.textLetterSpacing="0px")),c===0||l){n?o.strokeText(e,i,s):o.fillText(e,i,s);return}let h=i;const d=I.graphemeSegmenter(e);let f=o.measureText(e).width,g=0;for(let p=0;p<d.length;++p){const u=d[p];n?o.strokeText(u,h,s):o.fillText(u,h,s);let x="";for(let _=p+1;_<d.length;++_)x+=d[_];g=o.measureText(x).width,h+=f-g+c,f=g}}destroy(){this._activeTextures=null}}_t.extension={type:[y.WebGLSystem,y.WebGPUSystem,y.CanvasSystem],name:"canvasText"};P.add($e);P.add(Ye);P.add(it);P.add(Ot);P.add(at);P.add(ct);P.add(dt);P.add(_t);P.add(xt);P.add(pt);P.add(be);P.add(gt);P.add(ft);P.add(ut);P.add(Qe);P.add(qe);
